import os
import socket

from rbtools.clients.client import Client, Repository


class CVSClient(Client):
    """A client for CVS repositories"""

    def get_info(self):
        """Returns information about the repository

        This is an actual implementation that returns info about the cvs repo
        """

        if not self.util.check_install("cvs"):
            return None

        cvsroot_path = os.path.join("CVS", "Root")

        if not os.path.exists(cvsroot_path):
            return None

        fp = open(cvsroot_path, "r")
        repository_path = fp.read().strip()
        fp.close()

        i = repository_path.find("@")
        if i != -1:
            repository_path = repository_path[i + 1:]

        i = repository_path.find(":")

        if i != -1:
            host = repository_path[:i]
            try:
                canon = socket.getfqdn(host)
                repository_path = repository_path.replace('%s:' % host,
                                                          '%s:' % canon)
            except socket.error, msg:
                self.util.output("failed to get fqdn for %s, msg=%s" \
                                % (host, msg))

        return Repository(path=repository_path, util=self.util)

    def diff(self, files):
        """Performs a diff across all modified files in a CVS repository.

        CVS repositories do not support branches of branches in a way that
        makes parent diffs possible, so we never return a parent diff
        (the second value in the tuple).
        """
        return (self.do_diff(files), None)

    def do_diff(self, params):
        """Actual implementation for creating diffs

        Performs the actual diff operation through cvs diff, handling
        fake errors generated by CVS.
        """
        # Diff returns "1" if differences were found.
        return self.util.execute(["cvs", "diff", "-uN"] + params,
                        extra_ignore_errors=(1,))
